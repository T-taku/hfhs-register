import Head from 'next/head'
import { Comp_Navbar } from '../components/Navbar'
import { useSession } from 'next-auth/react';
import { AppShell, Container, Title, Text, Button, rem, Flex, Grid, Table } from '@mantine/core';
import { IconBrandGoogle } from '@tabler/icons-react';
import { signIn } from 'next-auth/react';
import productsByClass, { Product } from './utils/product';
import { useState } from 'react';

export default function Home() {
    const { data: session, status } = useSession()
    const products = productsByClass["2年1組"].map((element) => (
        <tr key={element.id}>
            <Button size={ "xl" } onClick={() => handleOrder(element)}>{ element.name }</Button>
        </tr>
    ));

    type OrderItem = {
        product: Product;
        count: number;
    }
    const [order, setOrder] = useState<OrderItem[]>([]);
    function handleOrder(product: Product) {
        const index = order.findIndex((item) => item.product.id === product.id);
    
        if (index === -1) {
            setOrder([...order, { product, count: 1 }]);
        } else {
            const newOrder = [...order];
            newOrder[index].count++;
            setOrder(newOrder);
        }
    }

    function deleteItemFromOrder(index:any) {
        setOrder((prevOrder) => {
            const newOrder = [...prevOrder];
            newOrder.splice(index, 1);
            return newOrder;
        });
    }

    return (
        <>
            <Head>
                <title>HFHS REGI SYS</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                session && (
                    <AppShell
                        navbar={<Comp_Navbar page="会計" username={session.user && session.user.name || "ゲスト"}/>}
                    >
                        <Grid grow>
                            <Grid.Col span={2}>
                                <Flex
                                    mih={50}
                                    gap="sm"
                                    justify="flex-end"
                                    align="center"
                                    direction="column"
                                    wrap="wrap"
                                >
                                    <Title order={4}>商品一覧</Title>
                                    {products}
                                </Flex>
                            </Grid.Col>
                            <Grid.Col span={10}>
                                <Flex
                                    mih={50}
                                    gap="sm"
                                    justify="flex-end"
                                    align="center"
                                    direction="column"
                                    wrap="wrap"
                                >
                                    <Title order={5}>購入商品</Title>
                                    <Table verticalSpacing="xs">
                                    <thead>
                                        <tr>
                                        <th>商品</th>
                                        <th>値段</th>
                                        <th>個数</th>
                                        <th>操作</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {order.map((item, index) => (
                                            <tr key={index}>
                                            <td>{item.product.name}</td>
                                            <td>¥{item.product.price}</td>
                                            <td>{item.count}</td>
                                            <td><a onClick={() => deleteItemFromOrder(index)}>削除</a></td>
                                            </tr>
                                        ))}
                                    </tbody>
                                    </Table>
                                </Flex>
                            </Grid.Col>
                        </Grid>
                    </AppShell>
                )
            }
            {
                !session && (
                    <Container
                        sx={{
                            display: "flex",
                            flexDirection: "column",
                            height: "100vh",
                            justifyContent: "center",
                            alignItems: "center",
                        }}
                    >
                        <Title order={2}>ログイン</Title>
                        <Text>学校のGoogleアカウントを使って、ログインしてください。</Text>
                        <Button
                            leftIcon={
                                <IconBrandGoogle size="1.2rem" stroke={1.5} />
                            }
                            radius="xl"
                            size="md"
                            styles={{
                            root: { paddingRight: rem(14), height: rem(48) },
                            }}
                            onClick={() => signIn()}
                        >
                            Googleでログイン
                        </Button>
                    </Container>
                )
            }
        </>
    )
}