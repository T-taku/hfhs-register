/* tslint:disable */
/* eslint-disable */
/**
 * HFHS Regi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 決済情報
 * @export
 * @interface History
 */
export interface History {
    /**
     * 
     * @type {string}
     * @memberof History
     */
    paymentId: string;
    /**
     * 
     * @type {string}
     * @memberof History
     */
    paidClass: string;
    /**
     * 
     * @type {Date}
     * @memberof History
     */
    timestamp: Date;
    /**
     * 
     * @type {number}
     * @memberof History
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof History
     */
    change: number;
    /**
     * 
     * @type {string}
     * @memberof History
     */
    product: string;
}

/**
 * Check if a given object implements the History interface.
 */
export function instanceOfHistory(value: object): value is History {
    if (!('paymentId' in value) || value['paymentId'] === undefined) return false;
    if (!('paidClass' in value) || value['paidClass'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('change' in value) || value['change'] === undefined) return false;
    if (!('product' in value) || value['product'] === undefined) return false;
    return true;
}

export function HistoryFromJSON(json: any): History {
    return HistoryFromJSONTyped(json, false);
}

export function HistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): History {
    if (json == null) {
        return json;
    }
    return {
        
        'paymentId': json['payment_id'],
        'paidClass': json['paid_class'],
        'timestamp': (new Date(json['timestamp'])),
        'total': json['total'],
        'change': json['change'],
        'product': json['product'],
    };
}

export function HistoryToJSON(value?: History | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'payment_id': value['paymentId'],
        'paid_class': value['paidClass'],
        'timestamp': ((value['timestamp']).toISOString()),
        'total': value['total'],
        'change': value['change'],
        'product': value['product'],
    };
}

