/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 管理者かどうか(管理者でない場合はNull)
     * @type {string}
     * @memberof User
     */
    userRole?: string;
    /**
     * 生徒のメールアドレス
     * @type {string}
     * @memberof User
     */
    userMail?: string;
    /**
     * 生徒氏名
     * @type {string}
     * @memberof User
     */
    userName?: string;
    /**
     * 生徒所属クラス
     * @type {string}
     * @memberof User
     */
    userClass?: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userRole': !exists(json, 'user_role') ? undefined : json['user_role'],
        'userMail': !exists(json, 'user_mail') ? undefined : json['user_mail'],
        'userName': !exists(json, 'user_name') ? undefined : json['user_name'],
        'userClass': !exists(json, 'user_class') ? undefined : json['user_class'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user_role': value.userRole,
        'user_mail': value.userMail,
        'user_name': value.userName,
        'user_class': value.userClass,
    };
}

